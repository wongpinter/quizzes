syntax = "proto3";
package movie.metadata.service.v1;
option go_package = "github.com/wongpinter/movie-metadata/movie/delivery/grpc/proto/v1";

import "google/api/annotations.proto";

service MovieService {
    rpc Ping(Empty) returns (Pong) {
		option (google.api.http) = { 
			get: "/v1/movie/ping"
		};
	};
    rpc SearchMovies(SearchQuery) returns (MovieSearchResults) {
		option (google.api.http) = {
			get: "/v1/movie/search"
		};
	};
    rpc GetSingleMovieByID(ByID) returns (MovieResponse) {
		option (google.api.http) = {
			get: "/v1/movie/id/{id}"
		};
	};
    rpc GetSingleMovieByTitle(ByTitle) returns (MovieResponse) {
		option (google.api.http) = {
			get: "/v1/movie/title/{title}"
		};
	};
}

message Empty{};

message Pong {
    string pong = 1;
};

message SearchQuery {
    string query = 1;
    int32 page = 2;
}

message ByID {
    string id = 1;
}

message ByTitle {
    string title = 1;
}

message MovieResponse {
    string imdbID = 1;
	string title = 2;
	string year = 3;
	string rated = 4;
	repeated Ratings Ratings = 5;
	string released = 6;
	string runtime = 7;
	string genre = 8;
	string writer = 9;
	string actors = 10;
	string plot = 11;
	string language = 12;
	string country = 13;
	string awards  = 14;
	string poster = 15;
	string metascore = 16;
	string imdb_rating = 17;
	string imdb_votes = 18;
	string type = 19;
	string dvd = 20;
	string box_office = 21;
	string production = 22;
	string website = 23;
	string response = 24;
	
}

message Ratings {
	string source = 1;
	string value = 2;
}

message Result {
	string imdbid = 1;
	string title = 2;
	string year = 3;
	string type = 4;
	string poster = 5;
}

message MovieSearchResults {
	repeated Result result = 1;
    string TotalResults = 2;
    string Response = 3;
}